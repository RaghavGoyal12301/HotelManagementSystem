/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ADMIN;

import OTHER.DBConnect;
import OTHER.WelcomeScreen;
import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RG
 */
public class AdminSearchByRoom extends javax.swing.JFrame {

    /**
     * Creates new form bookingConfirmed
     */
    public AdminSearchByRoom() {
        initComponents();

        TABLE.setBackground(new Color(0, 0, 0, 0));
        DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
        TABLE.getTableHeader().setOpaque(false);
        TABLE.getTableHeader().setBackground(new Color(177, 199, 131));
        TABLE.getTableHeader().setFont(new Font("Dubai", Font.PLAIN, 13));
        TABLE.getTableHeader().setBorder(null);
        TABLE.setBackground(new Color(0, 0, 0, 0));
        cellRenderer.setBackground(new Color(129, 129, 129));
        cellRenderer.setForeground(new Color(255, 255, 255));
        jScrollPane1.setBackground(new Color(129, 129, 129));
        jScrollPane1.setOpaque(true);
        TABLE.setOpaque(false);
        cellRenderer.setOpaque(false);

        TABLE.getColumnModel().getColumn(0).setPreferredWidth(50);
        TABLE.getColumnModel().getColumn(1).setPreferredWidth(50);
        TABLE.getColumnModel().getColumn(2).setPreferredWidth(50);
        TABLE.getColumnModel().getColumn(3).setPreferredWidth(50);
        TABLE.getColumnModel().getColumn(4).setPreferredWidth(50);
        TABLE.getColumnModel().getColumn(5).setPreferredWidth(50);
        cellRenderer.setHorizontalAlignment(JLabel.CENTER);
        TABLE.getColumnModel().getColumn(0).setCellRenderer(cellRenderer);
        TABLE.getColumnModel().getColumn(1).setCellRenderer(cellRenderer);
        TABLE.getColumnModel().getColumn(2).setCellRenderer(cellRenderer);
        TABLE.getColumnModel().getColumn(3).setCellRenderer(cellRenderer);
        TABLE.getColumnModel().getColumn(4).setCellRenderer(cellRenderer);
        TABLE.getColumnModel().getColumn(5).setCellRenderer(cellRenderer);
        setResizable(false);
        jScrollPane1.setViewportView(TABLE);
        jScrollPane1.getViewport().setOpaque(false);
        jScrollPane1.setBorder(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GREETINGS = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TABLE = new javax.swing.JTable();
        OK = new javax.swing.JButton();
        jTextField9 = new javax.swing.JTextField();
        ROOMTYPE = new javax.swing.JComboBox<>();
        jTextField7 = new javax.swing.JTextField();
        NUMBEROFBEDS = new javax.swing.JLabel();
        DELUXE = new javax.swing.JCheckBox();
        jTextField8 = new javax.swing.JTextField();
        SEARCH = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ADMIN | HOTEL MANAGEMENT SYSTEM");
        setMinimumSize(new java.awt.Dimension(800, 450));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        GREETINGS.setFont(new java.awt.Font("Dubai", 3, 24)); // NOI18N
        GREETINGS.setText("Hi , ");
        getContentPane().add(GREETINGS, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 190, 30));

        jScrollPane1.setBorder(null);
        jScrollPane1.setFocusable(false);
        jScrollPane1.setViewportView(null);

        TABLE.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        TABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room Number", "Guest Name", "Guest's Id", "Mobile Number", "Check-In", "Check-Out"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TABLE.setToolTipText("");
        TABLE.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        TABLE.setFocusable(false);
        TABLE.setGridColor(new java.awt.Color(255, 255, 255));
        TABLE.setIntercellSpacing(new java.awt.Dimension(0, 5));
        TABLE.setOpaque(false);
        TABLE.setRowHeight(23);
        TABLE.setSelectionBackground(new java.awt.Color(133, 133, 133));
        TABLE.setShowGrid(false);
        TABLE.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TABLE);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 740, 200));

        OK.setBackground(new java.awt.Color(178, 199, 132));
        OK.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        OK.setText("OK");
        OK.setBorder(null);
        OK.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                OKMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                OKMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                OKMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                OKMouseReleased(evt);
            }
        });
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });
        getContentPane().add(OK, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 410, 90, 20));

        jTextField9.setEditable(false);
        jTextField9.setBackground(new java.awt.Color(173, 154, 150));
        jTextField9.setFont(new java.awt.Font("Dubai", 1, 13)); // NOI18N
        jTextField9.setForeground(new java.awt.Color(255, 255, 255));
        jTextField9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField9.setText("Room Type*");
        jTextField9.setBorder(null);
        getContentPane().add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 110, 20));

        ROOMTYPE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ROOMTYPEActionPerformed(evt);
            }
        });
        getContentPane().add(ROOMTYPE, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, 130, -1));

        jTextField7.setEditable(false);
        jTextField7.setBackground(new java.awt.Color(173, 154, 150));
        jTextField7.setFont(new java.awt.Font("Dubai", 1, 13)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(255, 255, 255));
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField7.setText("Number of Beds");
        jTextField7.setBorder(null);
        getContentPane().add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, 110, 20));

        NUMBEROFBEDS.setFont(new java.awt.Font("Dubai", 2, 12)); // NOI18N
        NUMBEROFBEDS.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NUMBEROFBEDS.setText("1");
        getContentPane().add(NUMBEROFBEDS, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, 50, -1));

        DELUXE.setBackground(new java.awt.Color(255, 255, 255));
        DELUXE.setBorder(null);
        DELUXE.setOpaque(false);
        DELUXE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELUXEActionPerformed(evt);
            }
        });
        getContentPane().add(DELUXE, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 110, 20, 20));

        jTextField8.setEditable(false);
        jTextField8.setBackground(new java.awt.Color(173, 154, 150));
        jTextField8.setFont(new java.awt.Font("Dubai", 1, 13)); // NOI18N
        jTextField8.setForeground(new java.awt.Color(255, 255, 255));
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField8.setText("Deluxe");
        jTextField8.setBorder(null);
        getContentPane().add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, 70, 20));

        SEARCH.setBackground(new java.awt.Color(178, 199, 132));
        SEARCH.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        SEARCH.setText("FIND");
        SEARCH.setBorder(null);
        SEARCH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SEARCH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SEARCHMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SEARCHMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SEARCHMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SEARCHMouseReleased(evt);
            }
        });
        SEARCH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEARCHActionPerformed(evt);
            }
        });
        getContentPane().add(SEARCH, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 150, 90, 20));

        jLabel1.setBackground(new java.awt.Color(177, 199, 131));
        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Hotel - 2edited.jpg"))); // NOI18N
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 450));

        setSize(new java.awt.Dimension(814, 487));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void OKMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OKMouseEntered
        OK.setBackground(new Color(133, 133, 133));
        OK.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_OKMouseEntered

    private void OKMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OKMouseExited
        OK.setBackground(new Color(178, 199, 132));
        OK.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_OKMouseExited

    private void OKMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OKMousePressed
        OK.setBackground(new Color(153, 0, 255));
    }//GEN-LAST:event_OKMousePressed

    private void OKMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OKMouseReleased
        OK.setBackground(new Color(133, 133, 133));
    }//GEN-LAST:event_OKMouseReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//        try{
//            ResultSet rs = DBConnect.read("SELECT FIRSTNAME FROM "
//                    + "USER01.ADMINDB WHERE USERID ='" + 
//                    new DBConnect().getCurrentUser() + "'");                        // Setting up Greetings
//            rs.next();
//            GREETINGS.setText("Hi  " + rs.getString("FIRSTNAME") + ",");
//        }catch(Exception e){
//            JOptionPane.showMessageDialog(this, e.getMessage());
//        }

try {
        ResultSet rs1 = DBConnect.read("SELECT DISTINCT NUMBEROFBEDS, ROOMTYPE "
            + "FROM USER01.ROOMSDETAILS ORDER BY NUMBEROFBEDS");
        while (rs1.next()) {
            String item = rs1.getString("ROOMTYPE");                                    //  ** This code will get all types of rooms available in database
            ROOMTYPE.addItem(item);                                                     //     and set that to the combobox.
        }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }                     
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        dispose();
        DBConnect.initialization();
    }//GEN-LAST:event_formWindowClosed

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
        dispose();
        DBConnect.initialization();
    }//GEN-LAST:event_OKActionPerformed

    private void ROOMTYPEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ROOMTYPEActionPerformed
        DELUXE.setSelected(true);                                                        //****************************************************
        NUMBEROFBEDS.setText("");
        String deluxe;
        if (DELUXE.isSelected()) {
            deluxe = "true";
        } else {
            deluxe = "false";
        }

        String room_type = (String) ROOMTYPE.getSelectedItem();
        try {                                                                                // This code will fill all the details of selected room type
            ResultSet rs = DBConnect.read("SELECT DISTINCT NUMBEROFBEDS, PRICING "           //    like number of beds, price , etc
                + "FROM USER01.ROOMSDETAILS WHERE ROOMTYPE = '" + room_type + "' "
                + "AND DELUXE = '" + deluxe + "'");
            while (rs.next()) {
                String item = rs.getString("NUMBEROFBEDS");
                NUMBEROFBEDS.setText(item);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());

        }                                                                                               //******************************************************
    }//GEN-LAST:event_ROOMTYPEActionPerformed

    private void DELUXEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELUXEActionPerformed
        String deluxe;                                                                  //***************************************************
        if (DELUXE.isSelected()) {
            deluxe = "true";                                                            //Setting value of Deleuxe based on checkbox state
        } else {
            deluxe = "false";
        }

        String room_type = (String) ROOMTYPE.getSelectedItem();
        try {
            ResultSet rs = DBConnect.read("SELECT DISTINCT NUMBEROFBEDS, PRICING "
                + "FROM USER01.ROOMSDETAILS WHERE ROOMTYPE = '" + room_type + "' "
                + "AND DELUXE = '" + deluxe + "'");
            int c = 0;
            while (rs.next()) {
                c++;
                NUMBEROFBEDS.setText("");
                String item = rs.getString("NUMBEROFBEDS");
                NUMBEROFBEDS.setText(item);

            }
            if (c == 0) {                                                                             // Also if non-deluxe type of any room is not available then it will
                DELUXE.setSelected(true);                                                          // check and show the message.
                JOptionPane.showMessageDialog(rootPane, "Non-Deluxe Type of this room is NOT AVAILABLE...!!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());

        }                                                                                   //************************************************************
    }//GEN-LAST:event_DELUXEActionPerformed

    private void SEARCHMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SEARCHMouseEntered
        SEARCH.setBackground(new Color(133, 133, 133));
        SEARCH.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_SEARCHMouseEntered

    private void SEARCHMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SEARCHMouseExited
        SEARCH.setBackground(new Color(178, 199, 132));
        SEARCH.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_SEARCHMouseExited

    private void SEARCHMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SEARCHMousePressed
        SEARCH.setBackground(new Color(153, 0, 255));
    }//GEN-LAST:event_SEARCHMousePressed

    private void SEARCHMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SEARCHMouseReleased
        SEARCH.setBackground(new Color(133, 133, 133));
    }//GEN-LAST:event_SEARCHMouseReleased

    private void SEARCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEARCHActionPerformed
        String room_type = ROOMTYPE.getSelectedItem().toString();
        String no_of_beds = NUMBEROFBEDS.getText();

        String deluxe;
        if (DELUXE.isSelected()) {
            deluxe = "true"; 
        } else {
            deluxe = "false";
        }
        DefaultTableModel model = (DefaultTableModel) TABLE.getModel();
        
        model.setRowCount(0);                                                       // Removing previously added rows if any

        try{
            String query1 = "SELECT * FROM USER01.ROOMSDETAILS WHERE ROOMTYPE ='" 
                    + room_type + "' AND NUMBEROFBEDS = " + no_of_beds + " AND DELUXE = '" + deluxe + "'";
            ResultSet rs1 = DBConnect.read(query1);
            while(rs1.next()){
                String rn = rs1.getString("ROOMNUMBER");
                String name = "Room Not Booked";
                String un = "";
                String mn = "";
                String cid = "";
                String cod = "";

                String query2 = "SELECT * FROM USER01.CONFIRMBOOKINGS WHERE ROOMNUMBER = '"+ rn +"'";
                ResultSet rs2 = DBConnect.read(query2);
                if(rs2.next()){
                    un = rs2.getString("USERNAME");
                    cid = rs2.getDate("CHECKINDATE").toString();
                    cod = rs2.getDate("CHECKOUTDATE").toString();
                    
                    String query3 = "SELECT * FROM USER01.USERDB WHERE USERID = '"+ un +"'";
                    ResultSet rs3 = DBConnect.read(query3);
                    if(rs3.next()){
                        name = rs3.getString("FIRSTNAME") + " " + rs3.getString("LASTNAME");
                        mn = rs3.getString("MOBILENUMBER");
                        model.addRow(new Object[]{rn, name, un, mn, cid, cod});
                    }
                }
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_SEARCHActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("FlatLightLaf".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminSearchByRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox DELUXE;
    private javax.swing.JLabel GREETINGS;
    private javax.swing.JLabel NUMBEROFBEDS;
    private javax.swing.JButton OK;
    private javax.swing.JComboBox<String> ROOMTYPE;
    private javax.swing.JButton SEARCH;
    private javax.swing.JTable TABLE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
